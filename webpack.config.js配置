let path = require('path')
let HtmlWebpackPlugin = require('html-webpack-plugin')
module.exports = {
    devServer: {
        port: 3000,
        progress: true,
        contentBase: './build',
        compress: true
    },
    mode: 'development',
    entry: './src/index.js',
    output: {
        filename: 'bundle.[hash:8].js', //打包后的文件名
        path: path.resolve(__dirname, 'dist') // 路径是一个绝对路径
    },
    plugins: [ // 数组 放着所有webpack插件
        new HtmlWebpackPlugin({
            template: './src/index.html',
            filename: 'index.html',
            minify: {
                removeAttributeQuotes: true,
                collapseWhitespace: true
            }
        })
    ],
    module: {
        rules: [ // 规则 css-loader 接续 @import 这种语法
            // style-loader 他是把 css 插入到head标签中
            // loader的特点 希望单一
            // loader的用法 字符串只用一个loader
            // 多个loader需要 []
            // loader的顺序 默认是从右向左执行 从下向上执行
            // loader 还可以写成 对象方式 
            {
                // 可以处理less文件
                test: /\.css/,
                use: [
                    {
                        loader: 'style-loader',
                        options: {
                            insertAt: 'top'
                        }
                    },
                    'css-loader'
                ]
            },
            {
                // 可以处理less文件  sass stylus node-sass sass-loader
                // stylus stylus-loader
                test: /\.less/,
                use: [
                    {
                        loader: 'style-loader',
                        options: {
                            insertAt: 'top'
                        }
                    },
                    'css-loader', // @import 解析路径
                    'less-loader' // 把less ->css
                ]
            }
        ]

    }
}